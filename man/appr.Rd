% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aPPR.R, R/graph-igraph.R, R/graph-neocache.R,
%   R/graph-rtweet.R
\name{appr}
\alias{appr}
\alias{appr.igraph}
\alias{appr.neocache_graph}
\alias{appr.rtweet_graph}
\title{Approximate personalized pageranks}
\usage{
appr(
  graph,
  seeds,
  ...,
  alpha = 0.15,
  epsilon = 1e-06,
  tau = NULL,
  verbose = TRUE
)

\method{appr}{igraph}(graph, seeds, ...)

\method{appr}{neocache_graph}(graph, seeds, ...)

\method{appr}{rtweet_graph}(graph, seeds, ...)
}
\arguments{
\item{graph}{An \code{\link[=abstract_graph]{abstract_graph()}} object, such as those created by
\code{\link[=rtweet_graph]{rtweet_graph()}} and \code{\link[=neocache_graph]{neocache_graph()}}, and \code{\link[igraph:aaa-igraph-package]{igraph::igraph()}}
object. This argument is required.}

\item{seeds}{A character vector of seeds for the personalized pagerank.
The personalized pagerank will return to each of these seeds with
probability \code{alpha} at each node transition. At the moment,
all seeds are given equal weighting. This argument is required.}

\item{...}{Ignored. Passing arguments to \code{...} results in a warning.}

\item{alpha}{Teleportation constant. The teleportation constant is the
probability of returning to a seed node at each node transition.
\code{alpha} must be a valid probabilty; that is, between zero and one.
Defaults to \code{0.15}. This is the inverse of the "dampening factor"
in the original PageRank paper, so \code{alpha = 0.15} corresponds
to a dampening factor of \code{0.85}. Runtime is proportional to
\code{1 / (epsilon * alpha)}, so small \code{alpha} can result in long
runtimes.}

\item{epsilon}{Desired accuracy of approximation. \code{epsilon} must be
a valid probabilty; that is, between zero and one. Defaults to \code{1e-6}.
Runtime is proportional to \code{1 / (epsilon * alpha)}, so small \code{epsilon}
can result in long runtimes.}

\item{tau}{Regularization term. Additionally inflates the in-degree
of each observation by this term by performing the degree
adjustment described in Algorithm 3 and Algorithm 4, which
are described in \code{vignette("Mathematical details")}. Defaults to
\code{NULL}, in which case \code{tau} is set to the average in-degree of
the observed nodes. In general, setting it's reasonable to
set \code{tau} to the average in-degree of the graph.}

\item{verbose}{Logical indicating whether to report on the algorithms
progress. Defaults to \code{TRUE}.}
}
\value{
A \code{\link[=Tracker]{Tracker()}} object. Most relevant is the \code{stats} field,
a \code{\link[tibble:tibble]{tibble::tibble()}} with the following columns:
\itemize{
\item \code{name}: Name of a node (character).
\item \code{p}: Estimated personalized pagerank of a node.
\item \code{r}: Estimated error of pagerank estimate for a node.
\item \code{in_degree}: Number of incoming edges to a node.
\item \code{out_degree}: Number of outcoming edges from a node.
\item \code{degree_adjusted}: The personalized pagerank divided by the
node in-degree.
\item \code{regularized}: The personalized pagerank divide by the node
in-degree plus \code{tau}.
}

When computing personalized pageranks for Twitter users (either
via \code{\link[=rtweet_graph]{rtweet_graph()}} or \code{\link[=neocache_graph]{neocache_graph()}}), \code{name} is given
as a user ID, not a screen name, regardless of how the seed nodes
were specified.
}
\description{
Computes the personalized pagerank for specified seeds using the
\code{ApproximatePageRank} algorithm of Andersen et al. (2006). Computes
degree-adjustments and degree-regularization of personalized
pagerank vectors as described in Algorithms 3 and 4 of Chen et al. (2019).
These algorithms are randomized; if results are unstable across
multiple runs, decrease \code{epsilon}.
}
\examples{

library(aPPR)
library(igraph)

set.seed(27)

graph <- rtweet_graph()

\dontrun{
appr(graph, "alexpghayes")
}

graph2 <- sample_pa(100)

# this creates a Tracker object
ppr_results <- appr(graph2, seeds = "5")

# the portion of the Tracker object you probably care about
ppr_results$stats

}
\references{
Chen, F., Zhang, Y. & Rohe, K. Targeted sampling from massive Blockmodel graphs with personalized PageRank. 23. \url{http://arxiv.org/abs/1910.12937}

Andersen, R., Chung, F. & Lang, K. Local Graph Partitioning using PageRank Vectors. in 2006 47th Annual IEEE Symposium on Foundations of Computer Science (FOCS’06) 475–486 (IEEE, 2006). doi:10.1109/FOCS.2006.44. \url{http://ieeexplore.ieee.org/document/4031383/}
}
