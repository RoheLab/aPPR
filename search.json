[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex Hayes. Author, maintainer. Fan Chen. Author. Karl Rohe. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hayes , Chen F, Rohe K (2022). aPPR: Approximate Personalized PageRank. R package version 0.0.0.9102, https://github.com/RoheLab/aPPR.","code":"@Manual{,   title = {aPPR: Approximate Personalized PageRank},   author = {Alex Hayes and Fan Chen and Karl Rohe},   year = {2022},   note = {R package version 0.0.0.9102},   url = {https://github.com/RoheLab/aPPR}, }"},{"path":"/index.html","id":"appr","dir":"","previous_headings":"","what":"Approximate Personalized PageRank","title":"Approximate Personalized PageRank","text":"aPPR helps calculate approximate personalized pageranks large graphs, including can queried via API. aPPR additionally performs degree correction regularization, allowing recover blocks stochastic blockmodels. learn aPPR can: Glance slides JSM2021 talk Read accompanying paper","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Approximate Personalized PageRank","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"RoheLab/aPPR\")"},{"path":"/index.html","id":"find-the-personalized-pagerank-of-a-node-in-an-igraph-graph","dir":"","previous_headings":"","what":"Find the personalized pagerank of a node in an igraph graph","title":"Approximate Personalized PageRank","text":"can access Personalized PageRanks via stats field Tracker objects. Sometimes may wish limit computation time limiting number nodes visit, can follows:","code":"library(aPPR) library(igraph)  set.seed(27)  erdos_renyi_graph <- sample_gnp(n = 100, p = 0.5)  erdos_tracker <- appr(   erdos_renyi_graph,   # the graph to work with   seeds = \"5\",         # name of seed node (character)   epsilon = 0.0005     # desired approximation quality (see ?appr) )  erdos_tracker #> Personalized PageRank Approximator #> ---------------------------------- #>  #>   - number of seeds: 1 #>   - visits so far: 5 #>   - unique nodes visited so far: 1 out of maximum of Inf #>   - bad nodes so far: 0 #>  #>   - teleportation constant (alpha): 0.15 #>   - desired approximation error (epsilon): 5e-04 #>   - achieved bound on approximation error: 0.000416297883029663 #>   - current length of to-visit list: 0 #>  #> PPR table (see $stats field): #> # A tibble: 51 × 7 #>    name       r     p in_degree out_degree degree_adjusted regularized #>    <chr>  <dbl> <dbl>     <dbl>      <dbl>           <dbl>       <dbl> #>  1 5     0.0205 0.147        50         50         0.00294     0.00147 #>  2 3     0.0167 0            51         51         0           0       #>  3 6     0.0167 0            59         59         0           0       #>  4 8     0.0167 0            41         41         0           0       #>  5 15    0.0167 0            46         46         0           0       #>  6 16    0.0167 0            52         52         0           0       #>  7 17    0.0167 0            48         48         0           0       #>  8 19    0.0167 0            54         54         0           0       #>  9 20    0.0167 0            51         51         0           0       #> 10 21    0.0167 0            55         55         0           0       #> # … with 41 more rows erdos_tracker$stats #> # A tibble: 51 × 7 #>    name       r     p in_degree out_degree degree_adjusted regularized #>    <chr>  <dbl> <dbl>     <dbl>      <dbl>           <dbl>       <dbl> #>  1 5     0.0205 0.147        50         50         0.00294     0.00147 #>  2 3     0.0167 0            51         51         0           0       #>  3 6     0.0167 0            59         59         0           0       #>  4 8     0.0167 0            41         41         0           0       #>  5 15    0.0167 0            46         46         0           0       #>  6 16    0.0167 0            52         52         0           0       #>  7 17    0.0167 0            48         48         0           0       #>  8 19    0.0167 0            54         54         0           0       #>  9 20    0.0167 0            51         51         0           0       #> 10 21    0.0167 0            55         55         0           0       #> # … with 41 more rows limited_visits_tracker <- appr(   erdos_renyi_graph,      seeds = \"5\",            epsilon = 1e-10,        max_visits = 20      # maximum number of unique nodes to visit during approximation )  limited_visits_tracker #> Personalized PageRank Approximator #> ---------------------------------- #>  #>   - number of seeds: 1 #>   - visits so far: 22 #>   - unique nodes visited so far: 20 out of maximum of 20 #>   - bad nodes so far: 0 #>  #>   - teleportation constant (alpha): 0.15 #>   - desired approximation error (epsilon): 1e-10 #>   - achieved bound on approximation error: 0.00423832387327568 #>   - current length of to-visit list: 100 #>  #> PPR table (see $stats field): #> # A tibble: 100 × 7 #>    name       r     p in_degree out_degree degree_adjusted regularized #>    <chr>  <dbl> <dbl>     <dbl>      <dbl>           <dbl>       <dbl> #>  1 5     0.212  0.118        50         50         0.00237     0.00119 #>  2 3     0.0140 0            51         51         0           0       #>  3 6     0.0140 0            59         59         0           0       #>  4 8     0.0140 0            41         41         0           0       #>  5 15    0.0136 0            46         46         0           0       #>  6 16    0.0138 0            52         52         0           0       #>  7 17    0.0138 0            48         48         0           0       #>  8 19    0.0137 0            54         54         0           0       #>  9 20    0.0135 0            51         51         0           0       #> 10 21    0.0138 0            55         55         0           0       #> # … with 90 more rows"},{"path":"/index.html","id":"find-the-personalized-pagerank-of-a-twitter-user-using-rtweet","dir":"","previous_headings":"","what":"Find the personalized pagerank of a Twitter user using rtweet","title":"Approximate Personalized PageRank","text":"","code":"ftrevorc_ppr <- appr(   rtweet_graph(),   \"ftrevorc\",   epsilon = 1e-4,   max_visits = 5 )  ftrevorc_ppr #> Personalized PageRank Approximator #> ---------------------------------- #>  #>   - number of seeds: 1 #>   - visits so far: 7 #>   - unique nodes visited so far: 5 out of maximum of 5 #>   - bad nodes so far: 8 #>  #>   - teleportation constant (alpha): 0.15 #>   - desired approximation error (epsilon): 1e-04 #>   - achieved bound on approximation error: 0.00258904422527505 #>   - current length of to-visit list: 7 #>  #> PPR table (see $stats field): #> # A tibble: 166 × 7 #>    name                 r     p in_degree out_degree degree_adjusted regularized #>    <chr>            <dbl> <dbl>     <dbl>      <dbl>           <dbl>       <dbl> #>  1 7752257741314… 0.211   0.118        69        119         0.00171     4.05e-8 #>  2 9381208958721… 0.00563 0           371        179         0           0       #>  3 1359003756063… 0.00563 0           229        115         0           0       #>  4 76228303       0.00563 0          7257       2270         0           0       #>  5 1024298722828… 0.00563 0           378        927         0           0       #>  6 1264590946144… 0.00563 0           112        184         0           0       #>  7 1107711818997… 0.00563 0          3243        397         0           0       #>  8 1217315090     0.00563 0         20639        402         0           0       #>  9 1120701503763… 0.00563 0           349        243         0           0       #> 10 661613         0.00563 0         21315       4578         0           0       #> # … with 156 more rows"},{"path":"/index.html","id":"find-the-personalized-pagerank-of-a-twitter-user-and-cache-the-following-network-in-the-process","dir":"","previous_headings":"","what":"Find the personalized pagerank of a Twitter user and cache the following network in the process","title":"Approximate Personalized PageRank","text":"NOTE: January 2022, following work due change rtweet dev version yet updated neocache accommodate.","code":"alexpghayes_ppr <- appr(   neocache_graph(),   \"alexpghayes\",   epsilon = 1e-4 )  alexpghayes_ppr$stats"},{"path":"/index.html","id":"logging","dir":"","previous_headings":"","what":"Logging","title":"Approximate Personalized PageRank","text":"aPPR uses logger displaying information user. default, aPPR quite verbose. can control verbosity loading logger setting logging threshold. submit bug report, please please please include log file using TRACE threshold. can set kind detailed logging via following:","code":"library(logger)  # hide basically all messages (not recommended) log_threshold(FATAL, namespace = \"aPPR\")  ftrevorc_ppr <- appr(   rtweet_graph(),   \"ftrevorc\",   epsilon = 1e-4,   max_visits = 5 )  ftrevorc_ppr #> Personalized PageRank Approximator #> ---------------------------------- #>  #>   - number of seeds: 1 #>   - visits so far: 5 #>   - unique nodes visited so far: 5 out of maximum of 5 #>   - bad nodes so far: 8 #>  #>   - teleportation constant (alpha): 0.15 #>   - desired approximation error (epsilon): 1e-04 #>   - achieved bound on approximation error: 0.00386100386100386 #>   - current length of to-visit list: 6 #>  #> PPR table (see $stats field): #> # A tibble: 194 × 7 #>    name                r      p in_degree out_degree degree_adjusted regularized #>    <chr>           <dbl>  <dbl>     <dbl>      <dbl>           <dbl>       <dbl> #>  1 775225774131… 0.459   0.0811        69        119         0.00118     2.97e-8 #>  2 938120895872… 0.00386 0            371        179         0           0       #>  3 135900375606… 0.00386 0            229        115         0           0       #>  4 76228303      0.00386 0           7257       2270         0           0       #>  5 102429872282… 0.00386 0            378        927         0           0       #>  6 126459094614… 0.00386 0            112        184         0           0       #>  7 110771181899… 0.00386 0           3243        397         0           0       #>  8 1217315090    0.00386 0          20639        402         0           0       #>  9 112070150376… 0.00386 0            349        243         0           0       #> 10 661613        0.00386 0          21315       4578         0           0       #> # … with 184 more rows log_appender(   appender_file(     \"/path/to/logfile.log\"  ## TODO: choose a path to log to   ),   namespace = \"aPPR\" )  log_threshold(TRACE, namespace = \"aPPR\")  tracker <- appr(   rtweet_graph(),   seed = c(\"hadleywickham\", \"gvanrossum\"),   epsilon = 1e-6 )"},{"path":"/index.html","id":"ethical-considerations","dir":"","previous_headings":"","what":"Ethical considerations","title":"Approximate Personalized PageRank","text":"People right choose public discoverable information . aPPR often lead accounts interesting, also small sight. change public profile attention towards people running accounts, accounts, without permission.","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Approximate Personalized PageRank","text":"Chen, F., Zhang, Y. & Rohe, K. Targeted sampling massive Blockmodel graphs personalized PageRank. 2019. pdf Andersen, R., Chung, F. & Lang, K. Local Graph Partitioning using PageRank Vectors. 2006. pdf","code":""},{"path":"/reference/Tracker.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class to manage personalized pagerank calculations — Tracker","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"R6 class manage personalized pagerank calculations R6 class manage personalized pagerank calculations","code":""},{"path":"/reference/Tracker.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"seeds character vector seed nodes. path character vector nodes whose neighborhoods examined. stats tibble::tibble() one row visited node following columns: name: Name node (character). r: Current estimate residual per -degree node. p: Current estimate pagerank node. in_degree: Number incoming edges node. out_degree: Number outcoming edges node. failed character vector nodes visited. graph abstract graph object. alpha Teleportation constant Algorithm 3. alpha_prime Transformed teleportation constant Algorithm 3. epsilon Error tolerance. max_visits Maximum number nodes visit terminating. tau Regularization parameter used Algorithm 4.","code":""},{"path":[]},{"path":"/reference/Tracker.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Tracker$new() Tracker$print() Tracker$remaining() Tracker$current_approximation_error() Tracker$in_tracker() Tracker$in_failed() Tracker$add_seed() Tracker$add_to_path() Tracker$add_nodes() Tracker$add_failed() Tracker$update_p() Tracker$update_r_neighbor() Tracker$update_r_self() Tracker$regularize() Tracker$calculate_ppr() Tracker$clone()","code":""},{"path":"/reference/Tracker.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Create new Tracker object.","code":""},{"path":"/reference/Tracker.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$new(graph, alpha, epsilon, tau, max_visits)"},{"path":"/reference/Tracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"graph See appr(). alpha See appr(). epsilon See appr(). tau See appr(). max_visits See appr().","code":""},{"path":"/reference/Tracker.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"new Tracker object.","code":""},{"path":"/reference/Tracker.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Print tibble containing current state pagerank calculation.","code":""},{"path":"/reference/Tracker.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$print()"},{"path":"/reference/Tracker.html","id":"method-remaining-","dir":"Reference","previous_headings":"","what":"Method remaining()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Determine nodes need visited. Note , node zero degree, never leave node. important make sure never add nodes zero degree tracker.","code":""},{"path":"/reference/Tracker.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$remaining()"},{"path":"/reference/Tracker.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"character vector node names current residuals greater epsilon.","code":""},{"path":"/reference/Tracker.html","id":"method-current-approximation-error-","dir":"Reference","previous_headings":"","what":"Method current_approximation_error()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Determine current quality approximation.","code":""},{"path":"/reference/Tracker.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$current_approximation_error()"},{"path":"/reference/Tracker.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"numeric vector length one current worst error bound.","code":""},{"path":"/reference/Tracker.html","id":"method-in-tracker-","dir":"Reference","previous_headings":"","what":"Method in_tracker()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Check already row particular node","code":""},{"path":"/reference/Tracker.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$in_tracker(nodes)"},{"path":"/reference/Tracker.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"nodes Character name node(s) graph.","code":""},{"path":"/reference/Tracker.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"TRUE row node, FALSE row node.","code":""},{"path":"/reference/Tracker.html","id":"method-in-failed-","dir":"Reference","previous_headings":"","what":"Method in_failed()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Check previously failed visit node","code":""},{"path":"/reference/Tracker.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$in_failed(node)"},{"path":"/reference/Tracker.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"node Character name node graph.","code":""},{"path":"/reference/Tracker.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"TRUE failed visit node, FALSE otherwise. Note function return FALSE node new seen .","code":""},{"path":"/reference/Tracker.html","id":"method-add-seed-","dir":"Reference","previous_headings":"","what":"Method add_seed()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Create entry node tracker. Assumes node tracker yet, check case.","code":""},{"path":"/reference/Tracker.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$add_seed(seeds, preference)"},{"path":"/reference/Tracker.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"seeds name node graph length 1 character vector. preference TODO: recall earth .","code":""},{"path":"/reference/Tracker.html","id":"method-add-to-path-","dir":"Reference","previous_headings":"","what":"Method add_to_path()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"TODO","code":""},{"path":"/reference/Tracker.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$add_to_path(node)"},{"path":"/reference/Tracker.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"node name node graph length 1 character vector.","code":""},{"path":"/reference/Tracker.html","id":"method-add-nodes-","dir":"Reference","previous_headings":"","what":"Method add_nodes()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Create entry node tracker. Assumes node tracker yet, check case.","code":""},{"path":"/reference/Tracker.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$add_nodes(nodes, preference = 0)"},{"path":"/reference/Tracker.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"nodes name(s) node(s) graph character vector. preference TODO: recall earth .","code":""},{"path":"/reference/Tracker.html","id":"method-add-failed-","dir":"Reference","previous_headings":"","what":"Method add_failed()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Add node list nodes failed visit. Assumes node failed list yet, check case.","code":""},{"path":"/reference/Tracker.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$add_failed(nodes)"},{"path":"/reference/Tracker.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"nodes name node graph length 1 character vector.","code":""},{"path":"/reference/Tracker.html","id":"method-update-p-","dir":"Reference","previous_headings":"","what":"Method update_p()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Update estimate personalized pagerank given node","code":""},{"path":"/reference/Tracker.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$update_p(node)"},{"path":"/reference/Tracker.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"node Character name node graph.","code":""},{"path":"/reference/Tracker.html","id":"method-update-r-neighbor-","dir":"Reference","previous_headings":"","what":"Method update_r_neighbor()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Update residual good node neighborhood current node, adding tracker necessary","code":""},{"path":"/reference/Tracker.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$update_r_neighbor(u, v)"},{"path":"/reference/Tracker.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"u Character name node currently visiting. v Names neighbors u character vector. Can contain multiple elements. Can also contain zero elements.","code":""},{"path":"/reference/Tracker.html","id":"method-update-r-self-","dir":"Reference","previous_headings":"","what":"Method update_r_self()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Update residual current node","code":""},{"path":"/reference/Tracker.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$update_r_self(node)"},{"path":"/reference/Tracker.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"node Character name node currently visiting.","code":""},{"path":"/reference/Tracker.html","id":"method-regularize-","dir":"Reference","previous_headings":"","what":"Method regularize()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Compute degree-adjusted regularized variants personalized PageRank Algorithm 4, based outputs Algorithm 3.","code":""},{"path":"/reference/Tracker.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$regularize()"},{"path":"/reference/Tracker.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"node Character name node currently visiting.","code":""},{"path":"/reference/Tracker.html","id":"method-calculate-ppr-","dir":"Reference","previous_headings":"","what":"Method calculate_ppr()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"Main driver function perform computations outlined Algorithm 3.","code":""},{"path":"/reference/Tracker.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$calculate_ppr()"},{"path":"/reference/Tracker.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"node Character name node currently visiting.","code":""},{"path":"/reference/Tracker.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"objects class cloneable method.","code":""},{"path":"/reference/Tracker.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"","code":"Tracker$clone(deep = FALSE)"},{"path":"/reference/Tracker.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class to manage personalized pagerank calculations — Tracker","text":"deep Whether make deep clone.","code":""},{"path":"/reference/aPPR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"aPPR: Approximate Personalized PageRank — aPPR-package","title":"aPPR: Approximate Personalized PageRank — aPPR-package","text":"aPPR helps approximate personalized PageRank vectors massive graphs, including can queried via API. aPPR additionally performs degree correction regularization, allowing discovery community structure stochastic block models.","code":""},{"path":[]},{"path":"/reference/aPPR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"aPPR: Approximate Personalized PageRank — aPPR-package","text":"Maintainer: Alex Hayes alexpghayes@gmail.com (ORCID) Authors: Fan Chen fan.chen@wisc.edu (ORCID) Karl Rohe","code":""},{"path":"/reference/abstract_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an abstract graph object — abstract_graph","title":"Create an abstract graph object — abstract_graph","text":"actual graph object, graph Twitter following network defined implicitly via API requests, etc. abstract graph just list abstract_graph class desired subclass.","code":""},{"path":"/reference/abstract_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an abstract graph object — abstract_graph","text":"","code":"abstract_graph(subclass, ...)"},{"path":"/reference/abstract_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an abstract graph object — abstract_graph","text":"subclass Desired subclass (character). ... arguments pass list(). See rtweet_graph() example.","code":""},{"path":"/reference/appr.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate personalized pageranks — appr","title":"Approximate personalized pageranks — appr","text":"Computes personalized pagerank specified seeds using ApproximatePageRank algorithm Andersen et al. (2006). Computes degree-adjustments degree-regularization personalized pagerank vectors described Algorithms 3 4 Chen et al. (2019). algorithms randomized; results unstable across multiple runs, decrease epsilon.","code":""},{"path":"/reference/appr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate personalized pageranks — appr","text":"","code":"appr(   graph,   seeds,   ...,   alpha = 0.15,   epsilon = 1e-06,   tau = NULL,   max_visits = Inf )  # S3 method for igraph appr(graph, seeds, ...)  # S3 method for neocache_graph appr(graph, seeds, ...)  # S3 method for rtweet_graph appr(graph, seeds, ...)"},{"path":"/reference/appr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate personalized pageranks — appr","text":"graph abstract_graph() object, created rtweet_graph() neocache_graph(), igraph::igraph() object. argument required. seeds character vector seeds personalized pagerank. personalized pagerank return seeds probability alpha node transition. moment, seeds given equal weighting. argument required. ... Ignored. Passing arguments ... results warning. alpha Teleportation constant. teleportation constant probability returning seed node node transition. alpha must valid probabilty; , zero one. Defaults 0.15. inverse \"dampening factor\" original PageRank paper, alpha = 0.15 corresponds dampening factor 0.85. Runtime proportional 1 / (epsilon * alpha), small alpha can result long runtimes. epsilon Desired accuracy approximation. epsilon must small positive number. Defaults 1e-6. aPPR guarantees approximated personalized pageranks uniformly within epsilon true value. , approximation guaranteed good L-infinity sense. guarantee, however, ranking nodes aPPR close ranking nodes PPR. Twitter graphs, recommend testing code 1e-4 1e-5, using 1e-6 exploration, 1e-7 1e-8 final results, although numbers rough. also perfectly reasonable run aPPR given number steps (set via max_visits), note approximation accuracy results. Internally, aPPR keeps running estimate achieved accuracy always valid. Anytime like explore graph, can simply decrease epsilon. can start epsilon = 1e-5 gradually decrease epsilon sample graph happy . Also note runtime proportional 1 / (epsilon * alpha), small epsilon can result long runtimes. tau Regularization term. Additionally inflates -degree observation term performing degree adjustment described Algorithm 3 Algorithm 4, described vignette(\"Mathematical details\"). Defaults NULL, case tau set average -degree observed nodes. general, setting reasonable set tau average -degree graph. max_visits Maximum number unique nodes visit. positive integer. Defaults Inf, upper bound number unique nodes visit. Useful want specify fixed amount computation (API calls) use rather error tolerance. recommend debugging max_visits ~ 20, exploration max_visits hundreds, max_visits thousands ten thousands precise results, although rough heuristic.","code":""},{"path":"/reference/appr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate personalized pageranks — appr","text":"Tracker() object. relevant stats field, tibble::tibble() following columns: name: Name node (character). p: Current estimate residual per -degree node. r: Estimated error pagerank estimate node. in_degree: Number incoming edges node. out_degree: Number outcoming edges node. degree_adjusted: personalized pagerank divided node -degree. regularized: personalized pagerank divide node -degree plus tau. computing personalized pageranks Twitter users (either via rtweet_graph() neocache_graph()), name given user ID, screen name, regardless seed nodes specified.","code":""},{"path":"/reference/appr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Approximate personalized pageranks — appr","text":"Chen, F., Zhang, Y. & Rohe, K. Targeted sampling massive Blockmodel graphs personalized PageRank. 23. http://arxiv.org/abs/1910.12937 Andersen, R., Chung, F. & Lang, K. Local Graph Partitioning using PageRank Vectors. 2006 47th Annual IEEE Symposium Foundations Computer Science (FOCS’06) 475–486 (IEEE, 2006). doi:10.1109/FOCS.2006.44. http://ieeexplore.ieee.org/document/4031383/","code":""},{"path":"/reference/appr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximate personalized pageranks — appr","text":"","code":"library(aPPR) library(igraph) #>  #> Attaching package: ‘igraph’ #> The following object is masked from ‘package:aPPR’: #>  #>     neighborhood #> The following objects are masked from ‘package:stats’: #>  #>     decompose, spectrum #> The following object is masked from ‘package:base’: #>  #>     union  set.seed(27)  graph <- rtweet_graph()  if (FALSE) { appr(graph, \"alexpghayes\") }  graph2 <- sample_pa(100)  # this creates a Tracker object ppr_results <- appr(graph2, seeds = \"5\")  # the portion of the Tracker object you probably care about ppr_results$stats #> # A tibble: 2 × 7 #>   name            r     p in_degree out_degree degree_adjusted regularized #>   <chr>       <dbl> <dbl>     <dbl>      <dbl>           <dbl>       <dbl> #> 1 5     0.000000833 0.150         2          1          0.0750      0.0300 #> 2 4     0.000000667 0.127         4          1          0.0319      0.0182"},{"path":"/reference/check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a node an abstract graph is acceptable for inclusion in PPR — check","title":"Check if a node an abstract graph is acceptable for inclusion in PPR — check","text":"Inclusion criteria:","code":""},{"path":"/reference/check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a node an abstract graph is acceptable for inclusion in PPR — check","text":"","code":"check(graph, nodes)"},{"path":"/reference/check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a node an abstract graph is acceptable for inclusion in PPR — check","text":"graph graph object. nodes name(s) node(s) graph character vector.","code":""},{"path":"/reference/check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a node an abstract graph is acceptable for inclusion in PPR — check","text":"subset nodes acceptable inclusion. can character vector length zero necessary.","code":""},{"path":"/reference/check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if a node an abstract graph is acceptable for inclusion in PPR — check","text":"least one outgoing edge Can get degree degree node Can get nodes connected node / 1-hop neighbhorhood","code":""},{"path":"/reference/neighborhood.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the neighborhood of a node in a graph — neighborhood","title":"Get the neighborhood of a node in a graph — neighborhood","text":", find nodes connected node outgoing edge. function memorized avoid making repeated API queries.","code":""},{"path":"/reference/neighborhood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the neighborhood of a node in a graph — neighborhood","text":"","code":"neighborhood(graph, node)"},{"path":"/reference/neighborhood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the neighborhood of a node in a graph — neighborhood","text":"graph graph object. node name single node graph character vector.","code":""},{"path":"/reference/neighborhood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the neighborhood of a node in a graph — neighborhood","text":"character vector nodes graph connected outgoing edge node nodes. never empty, neighborhood() called nodes fail check().","code":""},{"path":"/reference/neocache_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an abstract representation of the Twitter friendship graph — neocache_graph","title":"Create an abstract representation of the Twitter friendship graph — neocache_graph","text":"Signifies aPPR query Twitter friendship graph via neocache.","code":""},{"path":"/reference/neocache_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an abstract representation of the Twitter friendship graph — neocache_graph","text":"","code":"neocache_graph(cache_name = \"aPPR\", retryonratelimit = TRUE)"},{"path":"/reference/neocache_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an abstract representation of the Twitter friendship graph — neocache_graph","text":"cache_name name neocache use save data . retryonratelimit TRUE, rate limit exhausted, wait refreshes. Twitter rate limits refresh every 15 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. default value, NULL, consults option rtweet.retryonratelimit can globally set TRUE, desired. expect query take hours days perform, rely soley retryonratelimit handle common failure modes like temporarily losing internet connection.","code":""},{"path":"/reference/neocache_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an abstract representation of the Twitter friendship graph — neocache_graph","text":"","code":"if (FALSE) {   test_ids <- c(\"780429268866052096\", \"1191642560\")  graph <- neocache_graph()  check(graph, test_ids) node_degrees(graph, test_ids) neighborhood(graph, test_ids[1])   }"},{"path":"/reference/node_degrees.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the in-degree and out-degree of nodes in an abstract graph — node_degrees","title":"Get the in-degree and out-degree of nodes in an abstract graph — node_degrees","text":"function called nodes check()'d. safe assume nodes non-empty. (TODO: check !)","code":""},{"path":"/reference/node_degrees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the in-degree and out-degree of nodes in an abstract graph — node_degrees","text":"","code":"node_degrees(graph, nodes)"},{"path":"/reference/node_degrees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the in-degree and out-degree of nodes in an abstract graph — node_degrees","text":"graph graph object. nodes name(s) node(s) graph character vector.","code":""},{"path":"/reference/node_degrees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the in-degree and out-degree of nodes in an abstract graph — node_degrees","text":"data.frame() one row every node nodes two columns: in_degree out_degree.frame one","code":""},{"path":"/reference/rtweet_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an abstract representation of the Twitter friendship graph — rtweet_graph","title":"Create an abstract representation of the Twitter friendship graph — rtweet_graph","text":"Signifies aPPR query Twitter friendship graph via rtweet.","code":""},{"path":"/reference/rtweet_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an abstract representation of the Twitter friendship graph — rtweet_graph","text":"","code":"rtweet_graph(retryonratelimit = TRUE, verbose = TRUE, n = 5000)"},{"path":"/reference/rtweet_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an abstract representation of the Twitter friendship graph — rtweet_graph","text":"retryonratelimit TRUE, rate limit exhausted, wait refreshes. Twitter rate limits refresh every 15 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. default value, NULL, consults option rtweet.retryonratelimit can globally set TRUE, desired. expect query take hours days perform, rely soley retryonratelimit handle common failure modes like temporarily losing internet connection. verbose Show progress bars messages indicating current progress? n Desired number results return. Results downloaded pages n large; default value download single page. Set n = Inf download many results possible. Twitter API rate limits number requests can perform 15 minute period. easiest way download use retryonratelimit = TRUE. guaranteed get exactly n results back. get fewer results tweets deleted hit rate limit. get results ask number tweets multiple page size, e.g. request n = 150 page size 200, get 200 results back.","code":""},{"path":"/reference/update.Tracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Tracker object — update.Tracker","title":"Update a Tracker object — update.Tracker","text":"Typically results insufficiently precise.","code":""},{"path":"/reference/update.Tracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Tracker object — update.Tracker","text":"","code":"# S3 method for Tracker update(object, ..., epsilon, max_visits)"},{"path":"/reference/update.Tracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Tracker object — update.Tracker","text":"object Tracker object update. ... Ignored. Passing arguments ... results warning. epsilon Desired accuracy approximation. epsilon must small positive number. Defaults 1e-6. aPPR guarantees approximated personalized pageranks uniformly within epsilon true value. , approximation guaranteed good L-infinity sense. guarantee, however, ranking nodes aPPR close ranking nodes PPR. Twitter graphs, recommend testing code 1e-4 1e-5, using 1e-6 exploration, 1e-7 1e-8 final results, although numbers rough. also perfectly reasonable run aPPR given number steps (set via max_visits), note approximation accuracy results. Internally, aPPR keeps running estimate achieved accuracy always valid. Anytime like explore graph, can simply decrease epsilon. can start epsilon = 1e-5 gradually decrease epsilon sample graph happy . Also note runtime proportional 1 / (epsilon * alpha), small epsilon can result long runtimes. max_visits Maximum number unique nodes visit. positive integer. Defaults Inf, upper bound number unique nodes visit. Useful want specify fixed amount computation (API calls) use rather error tolerance. recommend debugging max_visits ~ 20, exploration max_visits hundreds, max_visits thousands ten thousands precise results, although rough heuristic.","code":""},{"path":"/reference/update.Tracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a Tracker object — update.Tracker","text":"new Tracker object new value epsilon.","code":""},{"path":"/reference/update.Tracker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update a Tracker object — update.Tracker","text":"moment, supports changing epsilon. interest, can consider allowing updates tau, alpha seeds future.","code":""}]
